name: 'OnPromoteECS'

on:  
  workflow_call:
    inputs:
      from-environment_name:
        required: true
        type: string
      from-aws-region:
        required: true
        type: string
      from-aws-role:
        required: true
        type: string
      to-environment_name:
        required: true
        type: string
      to-aws-region:
        required: true
        type: string
      to-aws-role:
        required: true
        type: string
      revision:
        required: true
        type: string
    secrets:
      tfc-token:
        required: true

env:
  SERVICE_TYPE: 'ecs-tasks'

permissions:
  contents: read
  id-token: write

jobs:

  terraform-app-apply:
    runs-on: ubuntu-latest
    needs: [ create-role ]

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform Apply"
      uses: cailleach-devops/tfc-shared-actions/.github/actions/tfc/tfc-apply@main
      with:
        tfc-organization: "${{ vars.TFC_ORGANIZATION }}"
        tfc-token: "${{ secrets.tfc-token }}"
        tfc-workspace: "${{github.event.repository.name}}-app-${{ inputs.to-environment_name }}"
        tfc-cfg-directory: 'terraform/app'
        clusterName: "${{ vars.ECS_CLUSTER }}"
        serviceName: "${{ vars.ECS_SERVICE }}"
        revision: ${{ inputs.revision }}
        message: "GitHub Promote from ${{ inputs.from-environment_name }} to ${{ inputs.to-environment_name }}"

  database-apply:
    runs-on: ubuntu-latest
    needs: [ create-role ]
    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Someday"
      shell: bash
      run: echo "TO BE IMPLEMENTED..."

  app-promote:
    runs-on: ubuntu-latest
    needs: [ database-apply, terraform-app-apply]
    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4

    - name: Docker Copy
      uses: cailleach-devops/tfc-shared-actions/.github/actions/aws/ecr-copy-image@main
      with:
        from-aws-region: ${{ inputs.from-aws-region }}
        from-aws-role: ${{ inputs.from-aws-role }}
        to-aws-region: ${{ inputs.to-aws-region }}
        to-aws-role: ${{ inputs.to-aws-role }}
        service-name: ${{ vars.ECS_SERVICE }}
        revision: ${{ inputs.revision }}

  infra-publish:
    runs-on: ubuntu-latest
    needs: [ database-apply, terraform-app-apply]

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4

    - name: "Terraform Infra Apply"
      uses: cailleach-devops/tfc-shared-actions/.github/actions/tfc/tfc-apply@main
      with:
        tfc-organization: "${{ vars.TFC_ORGANIZATION }}"
        tfc-token: "${{ secrets.tfc-token }}"
        tfc-workspace: "${{github.event.repository.name}}-infra-${{ inputs.to-environment_name }}"
        tfc-cfg-directory: 'terraform/infra'
        clusterName: "${{ vars.ECS_CLUSTER }}"
        serviceName: "${{ vars.ECS_SERVICE }}"
        revision: ${{ inputs.revision }}
        message: "GitHub Promote from ${{ inputs.from-environment_name }} to ${{ inputs.to-environment_name }}"


  app-rollout:
    runs-on: ubuntu-latest
    needs: [ app-promote, infra-publish]

    steps:
    - name: Wait for Finish
      run: echo "Finished..."
